name: Critical GHAS Secrets and Dependabot Alerts to Slack

on:
  workflow_dispatch:  # For manual triggering
  schedule:
    - cron: '0 9 * * 1'  # Run every Monday at 9:00 AM UTC
  
  dependabot_alerts:
    types: [created]
    
  secret_scanning_alert:
    types: [created]

jobs:
  notify-slack:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      # Get Critical Dependabot alerts
      - name: Get Critical Dependabot Alerts
        if: github.event_name == 'dependabot_alerts' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        id: get-dependabot-alerts
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const repo = context.repo;
            const alerts = await github.rest.dependabot.listAlertsForRepo({
              owner: repo.owner,
              repo: repo.name,
              state: 'open',
              severity: 'critical'  // Only get critical severity alerts
            });
            
            if (alerts.data.length === 0) {
              console.log('No open critical Dependabot alerts found');
              core.setOutput('critical_count', 0);
              return;
            }
            
            const alertDetails = alerts.data.map(alert => {
              return {
                package: alert.dependency.package.name,
                severity: alert.security_vulnerability.severity,
                url: alert.html_url,
                created: alert.created_at,
                manifest: alert.dependency.manifest_path,
                description: alert.security_advisory.summary
              };
            });
            
            core.setOutput('critical_alerts', JSON.stringify(alertDetails));
            core.setOutput('critical_count', alertDetails.length);
      
      # Get Secret scanning alerts - all considered critical
      - name: Get Secret Scanning Alerts
        if: github.event_name == 'secret_scanning_alert' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        id: get-secret-alerts
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const repo = context.repo;
            const alerts = await github.rest.secretScanning.listAlertsForRepo({
              owner: repo.owner,
              repo: repo.name,
              state: 'open'
            });
            
            if (alerts.data.length === 0) {
              console.log('No open Secret scanning alerts found');
              core.setOutput('secrets_count', 0);
              return;
            }
            
            const alertDetails = alerts.data.map(alert => {
              return {
                secret_type: alert.secret_type,
                url: alert.html_url,
                created: alert.created_at,
                location: `${alert.secret_type} in ${alert.location?.path || 'unknown location'}`
              };
            });
            
            core.setOutput('secrets', JSON.stringify(alertDetails));
            core.setOutput('secrets_count', alertDetails.length);

      # Send to Slack (Critical Dependabot alerts)
      - name: Send Critical Dependabot Alerts to Slack
        if: steps.get-dependabot-alerts.outputs.critical_count > 0
        uses: slackapi/slack-github-action@v1.25.0
        with:
          payload: |
            {
              "text": ":warning: *CRITICAL Dependabot Security Alerts*",
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "ðŸ”´ CRITICAL Dependabot Security Alerts",
                    "emoji": true
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*${{ steps.get-dependabot-alerts.outputs.critical_count }}* critical vulnerability alerts in repository *${{ github.repository }}*"
                  }
                },
                {
                  "type": "divider"
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "${{ toJSON(fromJSON(steps.get-dependabot-alerts.outputs.critical_alerts)) }}"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

      # Send to Slack (Secret scanning alerts - all critical)
      - name: Send Secret Scanning Alerts to Slack
        if: steps.get-secret-alerts.outputs.secrets_count > 0
        uses: slackapi/slack-github-action@v1.25.0
        with:
          payload: |
            {
              "text": ":lock: *Critical Secret Scanning Alerts*",
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "ðŸ”´ CRITICAL Secret Scanning Alerts",
                    "emoji": true
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*${{ steps.get-secret-alerts.outputs.secrets_count }}* exposed secrets in repository *${{ github.repository }}*"
                  }
                },
                {
                  "type": "divider"
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "${{ toJSON(fromJSON(steps.get-secret-alerts.outputs.secrets)) }}"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

      # For direct event triggers - critical alerts only
      - name: Process Direct Event to Slack
        if: (github.event_name == 'dependabot_alerts' && github.event.alert.security_vulnerability.severity == 'critical') || github.event_name == 'secret_scanning_alert'
        uses: slackapi/slack-github-action@v1.25.0
        with:
          payload: |
            {
              "text": "${{ github.event_name == 'dependabot_alerts' ? 'ðŸ”´ CRITICAL Dependabot Alert' : 'ðŸ”´ CRITICAL Secret Scanning Alert' }}",
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "${{ github.event_name == 'dependabot_alerts' ? 'ðŸ”´ CRITICAL Dependabot Alert' : 'ðŸ”´ CRITICAL Secret Scanning Alert' }}",
                    "emoji": true
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Repository:* ${{ github.repository }}\n*Severity:* CRITICAL\n*Details:* Check GitHub Security tab"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
